networks:
  traefik:
    external: true

services:
  web-marriage:
    container_name: web-marriage
    restart: unless-stopped
    build:
     context: .
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.web-marriage.rule=Host(`scotex.tech`)"
      #- "traefik.http.routers.web-marriage.entrypoints=websecure"
      #- "traefik.http.routers.web-marriage.tls.certresolver=lets-encrypt"
      #- "traefik.http.services.web-marriage.loadbalancer.server.port=80"
      - traefik.enable=true
      - traefik.http.routers.web-marriage-http.rule=Host(`scotex.tech`) || Host(`www.scotex.tech`)
      - traefik.http.routers.web-marriage-http.entrypoints=web
      - traefik.http.routers.web-marriage-https.rule=Host(`scotex.tech`) || Host(`www.scotex.tech`)
      - traefik.http.routers.web-marriage-https.entrypoints=websecure
      - traefik.http.routers.web-marriage-https.tls=true
      - traefik.http.routers.web-marriage-https.tls.certresolver=lets-encrypt
      - traefik.http.routers.web-marriage-https.middlewares=redirect-to-non-www
      - traefik.http.services.web-marriage.loadbalancer.server.port=80
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^https?://www.scotex.tech/(.*)
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=https://scotex.tech/$${1}
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.permanent=true
    networks:
      - traefik